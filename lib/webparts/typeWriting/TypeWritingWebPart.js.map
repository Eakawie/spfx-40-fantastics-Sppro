{"version":3,"sources":["webparts/typeWriting/TypeWritingWebPart.ts"],"names":[],"mappings":"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","file":"webparts/typeWriting/TypeWritingWebPart.js","sourcesContent":["/**\r\n * @file\r\n * TypeWriting Web Part for SharePoint Framework SPFx\r\n *\r\n * Author: Olivier Carpentier\r\n * Copyright (c) 2016\r\n */\r\nimport {\r\n  BaseClientSideWebPart,\r\n  IPropertyPaneConfiguration,\r\n  PropertyPaneSlider,\r\n  PropertyPaneToggle,\r\n  PropertyPaneTextField,\r\n  IWebPartContext\r\n} from '@microsoft/sp-webpart-base';\r\nimport { Version } from '@microsoft/sp-core-library';\r\n\r\nimport * as strings from 'TypeWritingStrings';\r\nimport { ITypeWritingWebPartProps } from './ITypeWritingWebPartProps';\r\n\r\n//Imports property pane custom fields\r\nimport { PropertyFieldColorPickerMini } from 'sp-client-custom-fields/lib/PropertyFieldColorPickerMini';\r\nimport { PropertyFieldFontPicker } from 'sp-client-custom-fields/lib/PropertyFieldFontPicker';\r\nimport { PropertyFieldFontSizePicker } from 'sp-client-custom-fields/lib/PropertyFieldFontSizePicker';\r\n\r\nvar TypeWriting: any = require('typewriting');\r\n\r\nexport default class TypeWritingWebPart extends BaseClientSideWebPart<ITypeWritingWebPartProps> {\r\n\r\n  private guid: string;\r\n  private typeWriting: any;\r\n\r\n  /**\r\n   * @function\r\n   * Web part contructor.\r\n   */\r\n  public constructor(context?: IWebPartContext) {\r\n    super();\r\n\r\n    //Hack: to invoke correctly the onPropertyChange function outside this class\r\n    //we need to bind this object on it first\r\n    this.onPropertyPaneFieldChanged = this.onPropertyPaneFieldChanged.bind(this);\r\n\r\n    this.guid = this.getGuid();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Gets WP data version\r\n   */\r\n  protected get dataVersion(): Version {\r\n    return Version.parse('1.0');\r\n  }\r\n\r\n\r\n  /**\r\n   * @function\r\n   * Renders HTML code\r\n   */\r\n  public render(): void {\r\n\r\n    var style = \"style='padding: 5px;\";\r\n    if (this.properties.font != null)\r\n      style += \"font-family: \" + this.properties.font + ';';\r\n    if (this.properties.fontSize != null)\r\n      style += \"font-size: \" + this.properties.fontSize + ';';\r\n    if (this.properties.fontColor != null)\r\n      style += \"color: \" + this.properties.fontColor  + ';';\r\n    if (this.properties.backgroundColor != null)\r\n      style += \"background-color: \" + this.properties.backgroundColor  + ';';\r\n    style += \"'\";\r\n    var html = \"<div \" + style + \" id='\" + this.guid + \"-typewriting'></div>\";\r\n    this.domElement.innerHTML = html;\r\n\r\n    var text = this.properties.text;\r\n    if (this.properties.splitLines === true && text != null) {\r\n      var splitted = text.split(\"\\n\");\r\n      text = splitted[0];\r\n    }\r\n\r\n    if (this.typeWriting != null)\r\n      this.typeWriting = null;\r\n    this.typeWriting = new TypeWriting({\r\n        targetElement   : document.getElementById(this.guid + \"-typewriting\"),\r\n        inputString     : text,\r\n        typing_interval : this.properties.typingInterval,\r\n        blink_interval  : this.properties.blinkInterval + 'ms',\r\n        cursor_color    : this.properties.cursorColor,\r\n    }, () => {\r\n        //console.log(\"END\");\r\n    });\r\n\r\n     if (this.properties.splitLines === true && text != null) {\r\n       var splitted2 = this.properties.text.split(\"\\n\");\r\n       for (var i = 1; i < splitted2.length; i++) {\r\n          this.typeWriting.rewrite(splitted2[i], () => {});\r\n       }\r\n     }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Generates a GUID\r\n   */\r\n  private getGuid(): string {\r\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' +\r\n      this.s4() + '-' + this.s4() + this.s4() + this.s4();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Generates a GUID part\r\n   */\r\n  private s4(): string {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * PropertyPanel settings definition\r\n   */\r\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\r\n    return {\r\n      pages: [\r\n        {\r\n          header: {\r\n            description: strings.PropertyPaneDescription\r\n          },\r\n          displayGroupsAsAccordion: true,\r\n          groups: [\r\n            {\r\n              groupName: strings.BasicGroupName,\r\n              groupFields: [\r\n                PropertyPaneTextField('text', {\r\n                  label: strings.Text,\r\n                  multiline: true\r\n                }),\r\n                PropertyPaneToggle('splitLines', {\r\n                  label: strings.SplitLines\r\n                })\r\n              ]\r\n            },\r\n            {\r\n              groupName: strings.TypeWritingGroupName,\r\n              groupFields: [\r\n                PropertyPaneSlider('typingInterval', {\r\n                  label: strings.TypingInterval,\r\n                  min: 0,\r\n                  max: 500,\r\n                  step: 10\r\n                }),\r\n                PropertyPaneSlider('blinkInterval', {\r\n                  label: strings.BlinkInterval,\r\n                  min: 0,\r\n                  max: 5000,\r\n                  step: 50\r\n                }),\r\n                PropertyFieldColorPickerMini('cursorColor', {\r\n                  label: strings.CursorColor,\r\n                  initialColor: this.properties.cursorColor,\r\n                  onPropertyChange: this.onPropertyPaneFieldChanged,\r\n                  render: this.render.bind(this),\r\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\r\n                  properties: this.properties,\r\n                  key: 'typeWritingCursorColorField'\r\n                })\r\n              ]\r\n            },\r\n            {\r\n              groupName: strings.LayoutGroupName,\r\n              groupFields: [\r\n                PropertyFieldFontPicker('font', {\r\n                  label: strings.Font,\r\n                  useSafeFont: true,\r\n                  previewFonts: true,\r\n                  initialValue: this.properties.font,\r\n                  onPropertyChange: this.onPropertyPaneFieldChanged,\r\n                  render: this.render.bind(this),\r\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\r\n                  properties: this.properties,\r\n                  key: 'typeWritingFontField'\r\n                }),\r\n                PropertyFieldFontSizePicker('fontSize', {\r\n                  label: strings.FontSize,\r\n                  usePixels: true,\r\n                  preview: true,\r\n                  initialValue: this.properties.fontSize,\r\n                  onPropertyChange: this.onPropertyPaneFieldChanged,\r\n                  render: this.render.bind(this),\r\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\r\n                  properties: this.properties,\r\n                  key: 'typeWritingFontSizeField'\r\n                }),\r\n                PropertyFieldColorPickerMini('fontColor', {\r\n                  label: strings.FontColor,\r\n                  initialColor: this.properties.fontColor,\r\n                  onPropertyChange: this.onPropertyPaneFieldChanged,\r\n                  render: this.render.bind(this),\r\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\r\n                  properties: this.properties,\r\n                  key: 'typeWritingFontColorField'\r\n                }),\r\n                PropertyFieldColorPickerMini('backgroundColor', {\r\n                  label: strings.BackgroundColor,\r\n                  initialColor: this.properties.backgroundColor,\r\n                  onPropertyChange: this.onPropertyPaneFieldChanged,\r\n                  render: this.render.bind(this),\r\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\r\n                  properties: this.properties,\r\n                  key: 'typeWritingBgColorField'\r\n                })\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}