{"version":3,"sources":["webparts/sliderGallery/SliderGalleryWebPart.ts"],"names":[],"mappings":"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","file":"webparts/sliderGallery/SliderGalleryWebPart.js","sourcesContent":["/**\r\n * @file\r\n * Slider Gallery Web Part for SharePoint Framework SPFx\r\n *\r\n * Author: Olivier Carpentier\r\n * Copyright (c) 2016\r\n */\r\nimport {\r\n  BaseClientSideWebPart,\r\n  IPropertyPaneConfiguration,\r\n  IWebPartContext,\r\n  PropertyPaneDropdown,\r\n  PropertyPaneToggle,\r\n  PropertyPaneSlider\r\n} from '@microsoft/sp-webpart-base';\r\nimport { Version } from '@microsoft/sp-core-library';\r\n\r\nimport * as strings from 'sliderGalleryStrings';\r\nimport { ISliderGalleryWebPartProps } from './ISliderGalleryWebPartProps';\r\nimport { SPPicturesListService } from './SPPicturesListService';\r\nimport { ISPListItem } from './ISPList';\r\n\r\n//Imports property pane custom fields\r\nimport { PropertyFieldSPListQuery, PropertyFieldSPListQueryOrderBy } from 'sp-client-custom-fields/lib/PropertyFieldSPListQuery';\r\nimport { PropertyFieldColorPickerMini } from 'sp-client-custom-fields/lib/PropertyFieldColorPickerMini';\r\nimport { PropertyFieldFontPicker } from 'sp-client-custom-fields/lib/PropertyFieldFontPicker';\r\nimport { PropertyFieldFontSizePicker } from 'sp-client-custom-fields/lib/PropertyFieldFontSizePicker';\r\nimport { PropertyFieldAlignPicker } from 'sp-client-custom-fields/lib/PropertyFieldAlignPicker';\r\n\r\n//Loads external JS libs\r\nimport * as $ from 'jquery';\r\nrequire('unitegallery');\r\nrequire('ug-theme-slider');\r\n\r\n//Loads external CSS files\r\nrequire('../../css/unitegallery/unite-gallery.scss');\r\n\r\nexport default class SliderGalleryWebPart extends BaseClientSideWebPart<ISliderGalleryWebPartProps> {\r\n\r\n  private guid: string;\r\n\r\n  /**\r\n   * @function\r\n   * Web part contructor.\r\n   */\r\n  public constructor(context?: IWebPartContext) {\r\n    super();\r\n\r\n    this.guid = this.getGuid();\r\n\r\n    this.onPropertyPaneFieldChanged = this.onPropertyPaneFieldChanged.bind(this);\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Gets WP data version\r\n   */\r\n  protected get dataVersion(): Version {\r\n    return Version.parse('1.0');\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Renders HTML code\r\n   */\r\n  public render(): void {\r\n\r\n    if (this.properties.query == null || this.properties.query == '') {\r\n      //Display select a list message\r\n      this.domElement.innerHTML = `\r\n        <div class=\"ms-MessageBar\">\r\n          <div class=\"ms-MessageBar-content\">\r\n            <div class=\"ms-MessageBar-icon\">\r\n              <i class=\"ms-Icon ms-Icon--Info\"></i>\r\n            </div>\r\n            <div class=\"ms-MessageBar-text\">\r\n              ${strings.ErrorSelectList}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `;\r\n      return;\r\n    }\r\n\r\n    const picturesListService: SPPicturesListService = new SPPicturesListService(this.properties, this.context);\r\n      //Load the list of pictures from the current lib\r\n      var queryUrl = this.properties.query;\r\n      queryUrl += \"$expand=File&$select=Title,Description,id,File,FileSystemObjectType\";\r\n\r\n      picturesListService.getPictures(queryUrl)\r\n        .then((response) => {\r\n          var responseVal = response.value;\r\n\r\n          var outputHtml: string = '';\r\n          outputHtml += `\r\n              <div id=\"${this.guid}-gallery\" style=\"display:none;\">\r\n          `;\r\n\r\n          responseVal.map((object:ISPListItem, i:number) => {\r\n            //Select the best Alt text with title, description or file's name\r\n            var altText: string = object.Title;\r\n            if (altText == null || altText == '')\r\n              altText = object.Description;\r\n            if (altText == null || altText == '')\r\n            altText = object.File.Name;\r\n            //Render the item\r\n            outputHtml += `\r\n                <img alt=\"${altText}\" src=\"${object.File.ServerRelativeUrl}\"\r\n                  data-image=\"${object.File.ServerRelativeUrl}\"\r\n                  data-description=\"${altText}\">\r\n            `;\r\n          });\r\n          outputHtml += '</div>';\r\n          this.domElement.innerHTML = outputHtml;\r\n          this.renderContents();\r\n      });\r\n\r\n  }\r\n\r\n  private renderContents(): void {\r\n\r\n      ($ as any)(\"#\" + this.guid + \"-gallery\").unitegallery({\r\n        gallery_theme: \"slider\",\r\n        slider_enable_arrows: this.properties.enableArrows,\r\n        slider_enable_bullets: this.properties.enableBullets,\r\n        slider_transition: this.properties.transition,\r\n        gallery_preserve_ratio: this.properties.preserveRatio,\r\n        gallery_autoplay: this.properties.autoplay,\r\n        gallery_play_interval: this.properties.speed,\r\n        gallery_pause_on_mouseover: this.properties.pauseOnMouseover,\r\n        gallery_carousel: this.properties.carousel,\r\n        slider_enable_progress_indicator: this.properties.enableProgressIndicator,\r\n        slider_enable_play_button: this.properties.enablePlayButton,\r\n        slider_enable_fullscreen_button: this.properties.enableFullscreenButton,\r\n        slider_enable_zoom_panel: this.properties.enableZoomPanel,\r\n        slider_controls_always_on: this.properties.controlsAlwaysOn,\r\n        slider_enable_text_panel: this.properties.textPanelEnable,\r\n        slider_textpanel_always_on: this.properties.textPanelAlwaysOnTop,\r\n        slider_textpanel_bg_color: this.properties.textPanelBackgroundColor,\r\n        slider_textpanel_bg_opacity: this.properties.textPanelOpacity,\r\n        slider_textpanel_title_color: this.properties.textPanelFontColor,\r\n        slider_textpanel_title_font_family: this.properties.textPanelFont,\r\n        slider_textpanel_title_text_align: this.properties.textPanelAlign,\r\n        slider_textpanel_title_font_size: this.properties.textPanelFontSize != null ? this.properties.textPanelFontSize.replace(\"px\", \"\") : ''\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Generates a GUID\r\n   */\r\n  private getGuid(): string {\r\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' +\r\n      this.s4() + '-' + this.s4() + this.s4() + this.s4();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Generates a GUID part\r\n   */\r\n  private s4(): string {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * PropertyPanel settings definition\r\n   */\r\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\r\n    return {\r\n      pages: [\r\n        {\r\n          header: {\r\n            description: strings.PropertyPageGeneral\r\n          },\r\n          displayGroupsAsAccordion: true,\r\n          groups: [\r\n            {\r\n              groupName: strings.BasicGroupName,\r\n              groupFields: [\r\n                PropertyFieldSPListQuery('query', {\r\n                  label: '',\r\n                  query: this.properties.query,\r\n                  includeHidden: false,\r\n                  baseTemplate: 109,\r\n                  orderBy: PropertyFieldSPListQueryOrderBy.Title,\r\n                  showOrderBy: true,\r\n                  showMax: true,\r\n                  showFilters: true,\r\n                  max: 100,\r\n                  onPropertyChange: this.onPropertyPaneFieldChanged,\r\n                  render: this.render.bind(this),\r\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\r\n                  context: this.context,\r\n                  properties: this.properties,\r\n                  key: 'sliderGalleryQueryField'\r\n                })\r\n              ]\r\n            },\r\n            {\r\n              groupName: strings.GeneralGroupName,\r\n              groupFields: [\r\n                PropertyPaneToggle('enableArrows', {\r\n                  label: strings.EnableArrows\r\n                }),\r\n                PropertyPaneToggle('enableBullets', {\r\n                  label: strings.EnableBullets\r\n                }),\r\n                PropertyPaneToggle('enableProgressIndicator', {\r\n                  label: strings.EnableProgressIndicator\r\n                }),\r\n                PropertyPaneToggle('enablePlayButton', {\r\n                  label: strings.EnablePlayButton\r\n                }),\r\n                PropertyPaneToggle('enableFullscreenButton', {\r\n                  label: strings.EnableFullscreenButton\r\n                }),\r\n                PropertyPaneToggle('enableZoomPanel', {\r\n                  label: strings.EnableZoomPanel\r\n                }),\r\n                PropertyPaneToggle('controlsAlwaysOn', {\r\n                  label: strings.ControlsAlwaysOn\r\n                })\r\n              ]\r\n            },\r\n            {\r\n              groupName: strings.EffectsGroupName,\r\n              groupFields: [\r\n                PropertyPaneDropdown('transition', {\r\n                  label: strings.Transition,\r\n                  options: [\r\n                    {key: 'slide', text: 'Slide'},\r\n                    {key: 'fade', text: 'Fade'}\r\n                  ]\r\n                }),\r\n                PropertyPaneToggle('preserveRatio', {\r\n                  label: strings.PreserveRatio\r\n                }),\r\n                PropertyPaneToggle('pauseOnMouseover', {\r\n                  label: strings.PauseOnMouseover\r\n                }),\r\n                PropertyPaneToggle('carousel', {\r\n                  label: strings.Carousel\r\n                }),\r\n                PropertyPaneToggle('autoplay', {\r\n                  label: strings.Autoplay\r\n                }),\r\n                PropertyPaneSlider('speed', {\r\n                  label: strings.Speed,\r\n                  min: 0,\r\n                  max: 7000,\r\n                  step: 100\r\n                })\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n            header: {\r\n              description: strings.PropertyPageTextPanel\r\n            },\r\n            groups: [\r\n            {\r\n              groupName: strings.TextPanelGroupName,\r\n              groupFields: [\r\n                PropertyPaneToggle('textPanelEnable', {\r\n                  label: strings.TextPanelEnableFieldLabel\r\n                }),\r\n                PropertyPaneToggle('textPanelAlwaysOnTop', {\r\n                  label: strings.TextPanelAlwaysOnTopFieldLabel\r\n                }),\r\n                PropertyPaneSlider('textPanelOpacity', {\r\n                  label: strings.TextPanelOpacityFieldLabel,\r\n                  min: 0,\r\n                  max: 1,\r\n                  step: 0.1\r\n                }),\r\n                PropertyFieldAlignPicker('textPanelAlign', {\r\n                  label: strings.TextPanelAlignFieldLabel,\r\n                  initialValue: this.properties.textPanelAlign,\r\n                  onPropertyChanged: this.onPropertyPaneFieldChanged,\r\n                  render: this.render.bind(this),\r\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\r\n                  properties: this.properties,\r\n                  key: 'sliderGalleryAlignField'\r\n                }),\r\n                PropertyFieldFontPicker('textPanelFont', {\r\n                  label: strings.TextPanelFontFieldLabel,\r\n                  initialValue: this.properties.textPanelFont,\r\n                  onPropertyChange: this.onPropertyPaneFieldChanged,\r\n                  render: this.render.bind(this),\r\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\r\n                  properties: this.properties,\r\n                  key: 'sliderGalleryFontField'\r\n                }),\r\n                PropertyFieldFontSizePicker('textPanelFontSize', {\r\n                  label: strings.TextPanelFontSizeFieldLabel,\r\n                  initialValue: this.properties.textPanelFontSize,\r\n                  usePixels: true,\r\n                  preview: true,\r\n                  onPropertyChange: this.onPropertyPaneFieldChanged,\r\n                  render: this.render.bind(this),\r\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\r\n                  properties: this.properties,\r\n                  key: 'sliderGalleryFontSizeField'\r\n                }),\r\n                PropertyFieldColorPickerMini('textPanelFontColor', {\r\n                  label: strings.TextPanelFontColorFieldLabel,\r\n                  initialColor: this.properties.textPanelFontColor,\r\n                  onPropertyChange: this.onPropertyPaneFieldChanged,\r\n                  render: this.render.bind(this),\r\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\r\n                  properties: this.properties,\r\n                  key: 'sliderGalleryFontColorField'\r\n                }),\r\n                PropertyFieldColorPickerMini('textPanelBackgroundColor', {\r\n                  label: strings.TextPanelBackgroundColorFieldLabel,\r\n                  initialColor: this.properties.textPanelBackgroundColor,\r\n                  onPropertyChange: this.onPropertyPaneFieldChanged,\r\n                  render: this.render.bind(this),\r\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\r\n                  properties: this.properties,\r\n                  key: 'sliderGalleryBgColorField'\r\n                })\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}