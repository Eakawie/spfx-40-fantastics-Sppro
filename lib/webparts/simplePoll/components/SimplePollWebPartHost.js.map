{"version":3,"sources":["webparts/simplePoll/components/SimplePollWebPartHost.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;;;;;;GAOG;AACH,6BAA+B;AAC/B,8DAA0E;AAC1E,4DAAuE;AACvE,0DAAyD;AACzD,4DAAuE;AAGvE,2CAA6C;AAC7C,sDAAqD;AACrD,oEAA+C;AAE/C,IAAI,KAAK,GAAQ,OAAO,CAAC,SAAS,CAAC,CAAC;AAqBpC;;;GAGG;AACH;IAAmD,yCAA0D;IAM3G;;;OAGG;IACH,+BAAY,KAA8B,EAAE,OAAwB;QAApE,YACE,kBAAM,KAAK,EAAE,OAAO,CAAC,SA2BvB;QA1BE,kBAAkB;QAClB,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC;QACnC,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,OAAO,EAAE,CAAC;QAC3B,0BAA0B;QAC1B,KAAI,CAAC,KAAK,GAAG;YACZ,MAAM,EAAE,KAAK;YACZ,WAAW,EAAE,KAAK;YAClB,aAAa,EAAE,KAAK;YACpB,WAAW,EAAE,KAAK;YAClB,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,EAAE;YACZ,oBAAoB,EAAE,EAAE;YACxB,cAAc,EAAE,EAAE;YAClB,WAAW,EAAE,KAAK;YAClB,gBAAgB,EAAE,KAAK;YACvB,aAAa,EAAE,EAAE;YACjB,OAAO,EAAE,EAAE;SACd,CAAC;QAEA,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC/C,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACvD,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACjC,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC3C,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC7C,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACnD,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IACtD,CAAC;IAAA,CAAC;IAED;;;OAGG;IACI,sCAAM,GAAb;QAAA,iBA0GC;QAxGC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC,CAAC;YACjE,+BAA+B;YAC/B,MAAM,CAAC,CACL,6BAAK,SAAS,EAAC,eAAe;gBAC5B,6BAAK,SAAS,EAAC,uBAAuB;oBACpC,6BAAK,SAAS,EAAC,oBAAoB;wBACjC,2BAAG,SAAS,EAAC,uBAAuB,GAAK,CACrC;oBACN,6BAAK,SAAS,EAAC,oBAAoB,IAChC,OAAO,CAAC,eAAe,CACpB,CACF,CACF,CACP,CAAC;QACJ,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC;gBAC/B,uEAAuE;gBACvE,MAAM,CAAC,CACL,6BAAK,SAAS,EAAG,gCAAM,CAAC,UAAU;oBAChC,6BAAK,SAAS,EAAG,gCAAM,CAAC,kBAAkB;wBACxC,oBAAC,iBAAO,IAAC,IAAI,EAAG,qBAAW,CAAC,MAAM,GAAK,CACnC,CACF,CACP,CAAC;YACJ,CAAC;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;gBACxC,0BAA0B;gBAC1B,MAAM,CAAC,CACL,6BAAK,SAAS,EAAC,oCAAoC;oBACjD,6BAAK,SAAS,EAAC,uBAAuB;wBACpC,6BAAK,SAAS,EAAC,oBAAoB;4BACjC,2BAAG,SAAS,EAAC,6BAA6B,GAAK,CAC3C;wBACN,6BAAK,SAAS,EAAC,oBAAoB,IAChC,OAAO,CAAC,YAAY,CACjB,CACF,CACF,CACP,CAAC;YACJ,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,wBAAwB;gBACxB,MAAM,CAAC,CACH;oBAEE,oBAAC,eAAM,IAAC,IAAI,EAAE,mBAAU,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAChH,kBAAkB,EAAE,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK;wBAC9D;4BACM;gCACE,oBAAC,aAAK,QAAE,OAAO,CAAC,QAAQ,CAAS,CAC7B;4BACN,6BAAK,KAAK,EAAE,EAAC,UAAU,EAAC,MAAM,EAAC;gCAC7B,oBAAC,eAAM,IAAC,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,mBAAU,CAAC,OAAO,IAAG,OAAO,CAAC,EAAE,CAAU,CAClF,CACF,CACH;oBAET,oBAAC,eAAM,IAAC,IAAI,EAAE,mBAAU,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,EACnH,kBAAkB,EAAE,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK;wBAC9D;4BACM;gCACE,oBAAC,aAAK,QAAE,OAAO,CAAC,UAAU,CAAS,CAC/B;4BACN,6BAAK,KAAK,EAAE,EAAC,UAAU,EAAC,MAAM,EAAC;gCAC7B,oBAAC,eAAM,IAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,UAAU,EAAE,mBAAU,CAAC,OAAO,IAAG,OAAO,CAAC,EAAE,CAAU,CACnF,CACF,CACH;oBAET,6BAAK,KAAK,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,KAAK,IAAI,GAAG,OAAO,GAAG,MAAM,EAAC;wBACvE,gCAAQ,EAAE,EAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,EAAE,KAAK,EAAC,KAAK,EAAC,MAAM,EAAC,KAAK,GAAU;wBACpE,+BAAK;wBACL,+BAAO,IAAI,EAAC,QAAQ,EAAC,KAAK,EAAE,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,OAAO,EAAC,EAAE,OAAO,EAAE,IAAI,CAAC,eAAe,EAAE,SAAS,EAAC,8BAA8B,GAAE,CACxI;oBAEN,6BAAK,KAAK,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,KAAK,IAAI,GAAG,MAAM,GAAG,OAAO,EAAC;wBACvE,6BAAK,KAAK,EAAE,EAAC,aAAa,EAAE,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAC,IAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAO;wBAChJ,IAAI,CAAC,KAAK,CAAC,WAAW,KAAK,IAAI,GAAG,6BAAK,KAAK,EAAE,EAAC,KAAK,EAAE,OAAO,EAAE,aAAa,EAAE,MAAM,EAAC;4BAAE,oCAAS,OAAO,CAAC,WAAW,CAAU,CAAM,GAAG,EAAE;wBACzI,6BAAK,KAAK,EAAE,EAAC,UAAU,EAAE,MAAM,EAAC,IAC/B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,MAAc,EAAE,CAAS;4BAChD,MAAM,CAAC,CACL;gCAAK,+BAAO,IAAI,EAAC,OAAO,EAAC,cAAc,EAAE,MAAM,IAAI,KAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,GAAG,KAAK,kBAAgB,MAAM,IAAI,KAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,GAAG,KAAK,EAAE,QAAQ,EAAE,KAAI,CAAC,aAAa,EAAE,QAAQ,EAAE,KAAI,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE,KAAI,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,GAAI;;gCAAE,MAAM,CAAO,CAC/Q,CAAC;wBACJ,CAAC,CAAC,CACI;wBACN,6BAAK,KAAK,EAAE,EAAC,UAAU,EAAE,MAAM,EAAC;4BAC5B,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI;gCAC7B,+BAAO,IAAI,EAAC,QAAQ,EAAC,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,OAAO,EAAC,EAAE,KAAK,EAAE,OAAO,CAAC,IAAI,EAAE,SAAS,EAAC,8BAA8B,GAAE;kCACjK,EAAE;4BACN,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,sBAAsB,KAAK,KAAK;gCAC5E,+BAAO,IAAI,EAAC,QAAQ,EAAC,KAAK,EAAE,OAAO,CAAC,WAAW,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,SAAS,EAAC,WAAW,GAAE;;oCAEnG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI;wCAC5B,EAAE;;4CAEJ,+BAAO,IAAI,EAAC,QAAQ,EAAC,KAAK,EAAE,OAAO,CAAC,WAAW,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,OAAO,EAAC,EAAE,SAAS,EAAC,8BAA8B,GAAE,CAE7I,CACF,CACF,CACT,CAAC;YACJ,CAAC;QACH,CAAC;IACH,CAAC;IAEO,uCAAO,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG;YACpE,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;IACxD,CAAC;IAEO,kCAAE,GAAV;QACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,OAAO,CAAC;aAC7C,QAAQ,CAAC,EAAE,CAAC;aACZ,SAAS,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC;IAEO,6CAAa,GAArB,UAAsB,GAAS;QAC7B,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC;QACnD,4BAA4B;IAC9B,CAAC;IAEO,oCAAI,GAAZ,UAAa,GAAS;QAAtB,iBAeC;QAdC,oCAAoC;QACpC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,EAAE,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC;YACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,IAAM,WAAW,GAAoB,IAAI,iCAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YACzF,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,UAAC,QAAQ;gBACnH,KAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;gBAC9B,KAAI,CAAC,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC;gBACjC,KAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;gBACxB,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAEO,0CAAU,GAAlB;QACE,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,KAAK,CAAC;QACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAEO,yCAAS,GAAjB;QACE,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAEO,+CAAe,GAAvB,UAAwB,GAAS;QAC/B,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAEO,2CAAW,GAAnB,UAAoB,GAAS;QAA7B,iBAkBC;QAhBC,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;QAE9B,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,IAAI,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1B,IAAM,WAAW,GAAoB,IAAI,iCAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YACzF,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,GAAa;gBACpH,KAAI,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;gBACvB,KAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;gBACzB,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;gBAC1B,KAAI,CAAC,SAAS,EAAE,CAAC;YACrB,CAAC,CAAC,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC;IACH,CAAC;IAEO,yCAAS,GAAjB,UAAkB,OAAiB;QACjC,IAAI,GAAG,GAAa,EAAE,CAAC;QACvB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACxC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC;QACD,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IAEO,sDAAsB,GAA9B,UAA+B,KAAa;QAC1C,IAAI,GAAG,GAAW,KAAK,GAAG,EAAE,CAAC;QAC7B,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACZ,KAAK,CAAC,EAAE,MAAM,CAAC,UAAU,CAAC;YAC1B,KAAK,CAAC,EAAE,MAAM,CAAC,YAAY,CAAC;YAC5B,KAAK,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC;YACxB,KAAK,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC;YACtB,KAAK,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC;YACrB,KAAK,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC;YACvB,KAAK,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC;YACxB,KAAK,CAAC,EAAE,MAAM,CAAC,WAAW,CAAC;YAC3B,KAAK,CAAC,EAAE,MAAM,CAAC,WAAW,CAAC;YAC3B,KAAK,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC;YACtB,KAAK,EAAE,EAAE,MAAM,CAAC,SAAS,CAAC;YAC1B,KAAK,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC;YACxB,KAAK,EAAE,EAAE,MAAM,CAAC,QAAQ,CAAC;YACzB,KAAK,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC;YACvB,SAAS,MAAM,CAAC,MAAM,CAAC;QACzB,CAAC;IACH,CAAC;IAEO,yCAAS,GAAjB;QACI,IAAI,MAAM,GAAa,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1D,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,CAAC,CAAC;YAClC,IAAI,IAAI,GAAG;gBACP,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;gBAC1B,QAAQ,EAAE;oBACN;wBACI,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;wBACxB,eAAe,EAAE,MAAM;wBACvB,oBAAoB,EAAE,MAAM;qBAC/B;iBACJ;aACF,CAAC;YACJ,IAAI,OAAO,GAAG;gBACV,UAAU,EAAE,KAAK;gBACjB,gBAAgB,EAAE,CAAC;gBACnB,SAAS,EAAE;oBACP,aAAa,EAAE,IAAI;oBACnB,YAAY,EAAE,IAAI;iBACrB;gBACD,KAAK,EAAE;oBACH,OAAO,EAAE,IAAI;oBACb,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;oBACzB,QAAQ,EAAE,KAAK;oBACf,UAAU,EAAE,oDAAoD;oBAChE,QAAQ,EAAE,EAAE;oBACZ,SAAS,EAAE,MAAM;iBACpB;gBACD,MAAM,EAAE;oBACJ,OAAO,EAAE,IAAI;oBACb,QAAQ,EAAE,KAAK;oBACf,MAAM,EAAE;wBACJ,SAAS,EAAE,MAAM;wBACjB,UAAU,EAAE,oDAAoD;wBAChE,QAAQ,EAAE,EAAE;qBACf;iBACJ;aACF,CAAC;YACJ,IAAI,GAAG,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC;YACxD,IAAI,KAAK,CAAC,GAAG,EAAE;gBACT,IAAI,EAAE,KAAK;gBACX,IAAI,EAAE,IAAI;gBACV,OAAO,EAAE,OAAO;aACrB,CAAC,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACH,IAAI,KAAK,GAAG;gBACX,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;gBAC1B,QAAQ,EAAE;oBACN;wBACI,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;wBACxB,eAAe,EAAE,MAAM;wBACvB,oBAAoB,EAAE,MAAM;qBAC/B;iBACJ;aACF,CAAC;YACF,IAAI,QAAQ,GAAG;gBACb,UAAU,EAAE,KAAK;gBACjB,KAAK,EAAE;oBACH,OAAO,EAAE,IAAI;oBACb,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;oBACzB,QAAQ,EAAE,KAAK;oBACf,UAAU,EAAE,oDAAoD;oBAChE,QAAQ,EAAE,EAAE;oBACZ,SAAS,EAAE,MAAM;iBACpB;gBACD,MAAM,EAAE;oBACJ,OAAO,EAAE,KAAK;iBACjB;gBACD,MAAM,EAAE;oBACJ,KAAK,EAAE,CAAC;4BACJ,OAAO,EAAE,IAAI;yBAChB,CAAC;oBACF,KAAK,EAAE,CAAC;4BACJ,OAAO,EAAE,IAAI;yBAChB,CAAC;iBACL;aACF,CAAC;YACF,IAAI,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC;YACzD,IAAI,KAAK,CAAC,IAAI,EAAE;gBACZ,IAAI,EAAG,eAAe;gBACtB,IAAI,EAAE,KAAK;gBACX,OAAO,EAAE,QAAQ;aACpB,CAAC,CAAC;QACL,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAEO,6CAAa,GAArB,UAAsB,KAA8B;QAApD,iBA8BC;QA7BC,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI,IAAI,KAAK,CAAC,UAAU,IAAI,EAAE,CAAC;YACrD,MAAM,CAAC;QAET,8BAA8B;QAC9B,IAAM,WAAW,GAAoB,IAAI,iCAAe,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACpF,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,QAAQ;YACvD,IAAI,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC;YACjC,EAAE,CAAC,CAAC,WAAW,IAAI,IAAI,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,CAAC;gBACjD,MAAM,CAAC;YACT,IAAI,IAAI,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;YAC1B,KAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAClC,KAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;YACjC,KAAI,CAAC,KAAK,CAAC,oBAAoB,GAAG,IAAI,CAAC,UAAU,CAAC;YAElD,8DAA8D;YAC9D,WAAW,CAAC,cAAc,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,UAAC,YAAY;gBAC7H,IAAI,eAAe,GAAG,YAAY,CAAC,KAAK,CAAC;gBAEzC,EAAE,CAAC,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC/B,KAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;oBAC9B,KAAI,CAAC,KAAK,CAAC,aAAa,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBACtD,CAAC;gBACD,IAAI;oBACF,KAAI,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC;gBAEjC,KAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;gBACzB,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAGD;;;OAGG;IACI,iDAAiB,GAAxB;QACE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED;;;OAGG;IACG,yDAAyB,GAAhC,UAAiC,SAAkC;QAChE,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;IACjC,CAAC;IAEA;;;OAGG;IACI,kDAAkB,GAAzB,UAA0B,SAAkC,EAAE,SAA2B;QACvF,sBAAsB;IACxB,CAAC;IAEH,4BAAC;AAAD,CAhZA,AAgZC,CAhZkD,KAAK,CAAC,SAAS,GAgZjE","file":"webparts/simplePoll/components/SimplePollWebPartHost.js","sourcesContent":["/**\r\n * @file\r\n * Simple Poll Web Part React JSX component.\r\n *\r\n * Contains JSX code to render the web part with HTML templates.\r\n *\r\n * Author: Olivier Carpentier\r\n */\r\nimport * as React from 'react';\r\nimport { Spinner, SpinnerType } from 'office-ui-fabric-react/lib/Spinner';\r\nimport { Dialog, DialogType } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { Button, ButtonType } from 'office-ui-fabric-react/lib/Button';\r\nimport { ISimplePollWebPartProps } from '../ISimplePollWebPartProps';\r\nimport { IWebPartContext } from '@microsoft/sp-webpart-base';\r\nimport * as strings from 'SimplePollStrings';\r\nimport { SPSurveyService } from '../SPSurveyService';\r\nimport styles from '../SimplePoll.module.scss';\r\n\r\nvar Chart: any = require('chartjs');\r\n\r\n/**\r\n * @interface\r\n * Defines Simple Poll web part state.\r\n */\r\nexport interface ISimplePollState {\r\n\tloaded: boolean;\r\n  alreadyVote?: boolean;\r\n  existingAnswer?: string;\r\n  question?: string;\r\n  questionInternalName?: string;\r\n  choices?: string[];\r\n  viewResults?: boolean;\r\n  resultsLoaded?: boolean;\r\n  popupOpened?: boolean;\r\n  popupErrorOpened?: boolean;\r\n  selectedValue?: string;\r\n  results?: number[];\r\n}\r\n\r\n/**\r\n * @class\r\n * Defines Simple Poll web part class.\r\n */\r\nexport default class SimplePollWebPartHost extends React.Component<ISimplePollWebPartProps, ISimplePollState> {\r\n\r\n  //page context\r\n  private myPageContext: IWebPartContext;\r\n  private guid: string;\r\n\r\n  /**\r\n   * @function\r\n   * Simple Poll web part contructor.\r\n   */\r\n  constructor(props: ISimplePollWebPartProps, context: IWebPartContext) {\r\n    super(props, context);\r\n    //Save the context\r\n    this.myPageContext = props.context;\r\n    this.guid = this.getGuid();\r\n    //Init the component state\r\n   \tthis.state = {\r\n\t    loaded: false,\r\n      viewResults: false,\r\n      resultsLoaded: false,\r\n      alreadyVote: false,\r\n      choices: [],\r\n      question: '',\r\n      questionInternalName: '',\r\n      existingAnswer: '',\r\n      popupOpened: false,\r\n      popupErrorOpened: false,\r\n      selectedValue: '',\r\n      results: []\r\n\t\t};\r\n\r\n    this.viewResults = this.viewResults.bind(this);\r\n    this.viewResultsBack = this.viewResultsBack.bind(this);\r\n    this.vote = this.vote.bind(this);\r\n    this.closeVote = this.closeVote.bind(this);\r\n    this.closeError = this.closeError.bind(this);\r\n    this.onVoteChanged = this.onVoteChanged.bind(this);\r\n    this.loadQuestions = this.loadQuestions.bind(this);\r\n\t};\r\n\r\n  /**\r\n   * @function\r\n   * JSX Element render method\r\n   */\r\n  public render(): JSX.Element {\r\n\r\n    if (this.props.surveyList == null || this.props.surveyList == '') {\r\n      //Display select a list message\r\n      return (\r\n        <div className=\"ms-MessageBar\">\r\n          <div className=\"ms-MessageBar-content\">\r\n            <div className=\"ms-MessageBar-icon\">\r\n              <i className=\"ms-Icon ms-Icon--Info\"></i>\r\n            </div>\r\n            <div className=\"ms-MessageBar-text\">\r\n              {strings.ErrorSelectList}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      if (this.state.loaded == false) {\r\n        //Display the loading spinner with the Office UI Fabric Spinner control\r\n        return (\r\n          <div className={ styles.SimplePoll }>\r\n            <div className={ styles.workingOnItSpinner }>\r\n              <Spinner type={ SpinnerType.normal } />\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      else if (this.state.choices.length == 0) {\r\n        //Display message no items\r\n        return (\r\n          <div className=\"ms-MessageBar ms-MessageBar--error\">\r\n            <div className=\"ms-MessageBar-content\">\r\n              <div className=\"ms-MessageBar-icon\">\r\n                <i className=\"ms-Icon ms-Icon--ErrorBadge\"></i>\r\n              </div>\r\n              <div className=\"ms-MessageBar-text\">\r\n                {strings.ErrorNoItems}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      else {\r\n        //Display the items list\r\n        return (\r\n            <div>\r\n\r\n              <Dialog type={DialogType.close} isOpen={this.state.popupOpened} title={strings.ThankYou} onDismiss={this.closeVote}\r\n                containerClassName={''} isDarkOverlay={true} isBlocking={false}>\r\n                <div>\r\n                      <div>\r\n                        <Label>{strings.Recorded}</Label>\r\n                      </div>\r\n                      <div style={{paddingTop:'20px'}}>\r\n                        <Button onClick={this.closeVote} buttonType={ButtonType.primary}>{strings.OK}</Button>\r\n                      </div>\r\n                    </div>\r\n              </Dialog>\r\n\r\n              <Dialog type={DialogType.close} isOpen={this.state.popupErrorOpened} title={strings.Error} onDismiss={this.closeError}\r\n                containerClassName={''} isDarkOverlay={true} isBlocking={false}>\r\n                <div>\r\n                      <div>\r\n                        <Label>{strings.SelectVote}</Label>\r\n                      </div>\r\n                      <div style={{paddingTop:'20px'}}>\r\n                        <Button onClick={this.closeError} buttonType={ButtonType.primary}>{strings.OK}</Button>\r\n                      </div>\r\n                    </div>\r\n              </Dialog>\r\n\r\n              <div style={{display: this.state.viewResults === true ? 'block' : 'none'}}>\r\n                <canvas id={this.guid + '-chart'} width=\"300\" height=\"300\"></canvas>\r\n                <br/>\r\n                <input type='button' value={strings.Back} style={{color: 'white'}} onClick={this.viewResultsBack} className='ms-Button ms-Button--primary'/>\r\n              </div>\r\n\r\n              <div style={{display: this.state.viewResults === true ? 'none' : 'block'}}>\r\n                <div style={{paddingBottom: '10px', fontFamily: this.props.font, fontSize: this.props.size, color: this.props.color}}>{this.state.question}</div>\r\n                {this.state.alreadyVote === true ? <div style={{color: 'green', paddingBottom: '10px'}}><strong>{strings.AlreadyVote}</strong></div> : ''}\r\n                <div style={{lineHeight: '28px'}}>\r\n                {this.state.choices.map((answer: string, i: number) => {\r\n                  return (\r\n                    <div><input type='radio' defaultChecked={answer == this.state.selectedValue ? true : false} aria-checked={answer == this.state.selectedValue ? true : false} onChange={this.onVoteChanged} disabled={this.state.alreadyVote} name={this.guid} value={answer} /> {answer}</div>\r\n                  );\r\n                })}\r\n                </div>\r\n                <div style={{paddingTop: '20px'}}>\r\n                   {this.state.alreadyVote != true ?\r\n                     <input type='button' onClick={this.vote} disabled={this.state.alreadyVote} style={{color: 'white'}} value={strings.Vote} className='ms-Button ms-Button--primary'/>\r\n                     : ''}\r\n                  {this.state.alreadyVote != true && this.props.forceVoteToViewResults === false ?\r\n                    <input type='button' value={strings.ViewResults} onClick={this.viewResults} className='ms-Button'/>\r\n                    :\r\n                    this.state.alreadyVote != true ?\r\n                      ''\r\n                    :\r\n                    <input type='button' value={strings.ViewResults} onClick={this.viewResults} style={{color: 'white'}} className='ms-Button ms-Button--primary'/>\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private getGuid(): string {\r\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' +\r\n      this.s4() + '-' + this.s4() + this.s4() + this.s4();\r\n  }\r\n\r\n  private s4(): string {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n  }\r\n\r\n  private onVoteChanged(elm?: any): void {\r\n    this.state.selectedValue = elm.currentTarget.value;\r\n    //this.setState(this.state);\r\n  }\r\n\r\n  private vote(elm?: any): void {\r\n    //Check if a value has been selected\r\n    if (this.state.selectedValue == null || this.state.selectedValue == '') {\r\n      this.state.popupErrorOpened = true;\r\n      this.setState(this.state);\r\n    }\r\n    else {\r\n      const listService: SPSurveyService = new SPSurveyService(this.props, this.myPageContext);\r\n      listService.postVote(this.props.surveyList, this.state.questionInternalName, this.state.selectedValue).then((response) => {\r\n        this.state.popupOpened = true;\r\n        this.state.resultsLoaded = false;\r\n        this.state.results = [];\r\n        this.setState(this.state);\r\n      });\r\n    }\r\n  }\r\n\r\n  private closeError(): void {\r\n    this.state.popupErrorOpened = false;\r\n    this.setState(this.state);\r\n  }\r\n\r\n  private closeVote(): void {\r\n    this.state.popupOpened = false;\r\n    this.state.alreadyVote = true;\r\n    this.setState(this.state);\r\n  }\r\n\r\n  private viewResultsBack(elm?: any): void {\r\n    this.state.viewResults = false;\r\n    this.setState(this.state);\r\n  }\r\n\r\n  private viewResults(elm?: any): void {\r\n\r\n    this.state.viewResults = true;\r\n\r\n    if (this.state.resultsLoaded != true) {\r\n      this.state.loaded = false;\r\n      this.setState(this.state);\r\n      const listService: SPSurveyService = new SPSurveyService(this.props, this.myPageContext);\r\n      listService.getResults(this.props.surveyList, this.state.questionInternalName, this.state.choices).then((num: number[]) => {\r\n        this.state.results = num;\r\n          this.state.loaded = true;\r\n          this.setState(this.state);\r\n          this.loadChart();\r\n      });\r\n    }\r\n    else {\r\n      this.setState(this.state);\r\n    }\r\n  }\r\n\r\n  private getColors(choices: string[]): string[] {\r\n    var res: string[] = [];\r\n    for (var c = 0; c < choices.length; c++) {\r\n      res.push(this.getRandomInitialsColor(c));\r\n    }\r\n    return res;\r\n  }\r\n\r\n  private getRandomInitialsColor(index: number): string {\r\n    var num: number = index % 13;\r\n    switch (num) {\r\n      case 0: return 'darkBlue';\r\n      case 1: return 'lightGreen';\r\n      case 2: return 'orange';\r\n      case 3: return 'teal';\r\n      case 4: return 'red';\r\n      case 5: return 'green';\r\n      case 6: return 'purple';\r\n      case 7: return 'darkGreen';\r\n      case 8: return 'lightPink';\r\n      case 9: return 'pink';\r\n      case 10: return 'magenta';\r\n      case 11: return 'black';\r\n      case 12: return 'yellow';\r\n      case 13: return 'blue';\r\n      default: return 'blue';\r\n    }\r\n  }\r\n\r\n  private loadChart(): void {\r\n      var colors: string[] = this.getColors(this.state.choices);\r\n      if (this.props.chartType == 'pie') {\r\n        var data = {\r\n            labels: this.state.choices,\r\n            datasets: [\r\n                {\r\n                    data: this.state.results,\r\n                    backgroundColor: colors,\r\n                    hoverBackgroundColor: colors\r\n                }\r\n            ]\r\n          };\r\n        var options = {\r\n            responsive: false,\r\n            cutoutPercentage: 0,\r\n            animation: {\r\n                animateRotate: true,\r\n                animateScale: true\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: this.state.question,\r\n                position: 'top',\r\n                fontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n                fontSize: 18,\r\n                fontColor: \"#666\"\r\n            },\r\n            legend: {\r\n                display: true,\r\n                position: 'top',\r\n                labels: {\r\n                    fontColor: \"#666\",\r\n                    fontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n                    fontSize: 12\r\n                }\r\n            }\r\n          };\r\n        var ctx = document.getElementById(this.guid + '-chart');\r\n        new Chart(ctx, {\r\n              type: 'pie',\r\n              data: data,\r\n              options: options\r\n        });\r\n      }\r\n      else {\r\n         var data2 = {\r\n          labels: this.state.choices,\r\n          datasets: [\r\n              {\r\n                  data: this.state.results,\r\n                  backgroundColor: colors,\r\n                  hoverBackgroundColor: colors\r\n              }\r\n          ]\r\n        };\r\n        var options2 = {\r\n          responsive: false,\r\n          title: {\r\n              display: true,\r\n              text: this.state.question,\r\n              position: 'top',\r\n              fontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n              fontSize: 12,\r\n              fontColor: \"#666\"\r\n          },\r\n          legend: {\r\n              display: false\r\n          },\r\n          scales: {\r\n              xAxes: [{\r\n                  display: true\r\n              }],\r\n              yAxes: [{\r\n                  display: true\r\n              }]\r\n          }\r\n        };\r\n        var ctx2 = document.getElementById(this.guid + '-chart');\r\n        new Chart(ctx2, {\r\n            type:  'horizontalBar',\r\n            data: data2,\r\n            options: options2\r\n        });\r\n      }\r\n\r\n      this.state.resultsLoaded = true;\r\n      this.setState(this.state);\r\n  }\r\n\r\n  private loadQuestions(props: ISimplePollWebPartProps): void {\r\n    if (props.surveyList == null || props.surveyList == '')\r\n      return;\r\n\r\n    //Request the survey questions\r\n    const listService: SPSurveyService = new SPSurveyService(props, this.myPageContext);\r\n    listService.getQuestions(props.surveyList).then((response) => {\r\n      var responseVal = response.value;\r\n      if (responseVal == null || responseVal.length == 0)\r\n        return;\r\n      var item = responseVal[0];\r\n      this.state.choices = item.Choices;\r\n      this.state.question = item.Title;\r\n      this.state.questionInternalName = item.StaticName;\r\n\r\n      //Request the existing votes to get current user voting status\r\n      listService.getVoteForUser(props.surveyList, item.StaticName, this.myPageContext.pageContext.user.loginName).then((responseVote) => {\r\n        var responseVoteVal = responseVote.value;\r\n\r\n        if (responseVoteVal.length > 0) {\r\n          this.state.alreadyVote = true;\r\n          this.state.selectedValue = responseVoteVal[0].Title;\r\n        }\r\n        else\r\n          this.state.alreadyVote = false;\r\n\r\n        this.state.loaded = true;\r\n        this.setState(this.state);\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * @function\r\n   * Function called when the component did mount\r\n   */\r\n  public componentDidMount(): void {\r\n    this.loadQuestions(this.props);\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Function called when the web part properties has changed\r\n   */\r\n\tpublic componentWillReceiveProps(nextProps: ISimplePollWebPartProps): void {\r\n    this.state.resultsLoaded = false;\r\n    this.state.results = [];\r\n    this.setState(this.state);\r\n    this.loadQuestions(nextProps);\r\n\t}\r\n\r\n  /**\r\n   * @function\r\n   * Function called when the component has been rendered (ie HTML code is ready)\r\n   */\r\n  public componentDidUpdate(prevProps: ISimplePollWebPartProps, prevState: ISimplePollState): void {\r\n    //his.loadQuestions();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}