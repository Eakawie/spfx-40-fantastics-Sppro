{"version":3,"sources":["webparts/mediaPlayer/MediaPlayerWebPart.ts"],"names":[],"mappings":"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","file":"webparts/mediaPlayer/MediaPlayerWebPart.js","sourcesContent":["/**\r\n * @file\r\n * Media Player Web Part for SharePoint Framework SPFx\r\n *\r\n * Author: Olivier Carpentier\r\n * Copyright (c) 2016\r\n */\r\nimport {\r\n  BaseClientSideWebPart,\r\n  IPropertyPaneConfiguration,\r\n  PropertyPaneTextField,\r\n  PropertyPaneDropdown,\r\n  IWebPartContext\r\n} from '@microsoft/sp-webpart-base';\r\nimport { Version } from '@microsoft/sp-core-library';\r\n\r\nimport * as strings from 'MediaPlayerStrings';\r\nimport { IMediaPlayerWebPartProps } from './IMediaPlayerWebPartProps';\r\n\r\n//Imports property pane custom fields\r\nimport { PropertyFieldCustomList, CustomListFieldType } from 'sp-client-custom-fields/lib/PropertyFieldCustomList';\r\n\r\n//Loads external CSS\r\nrequire('../../css/mediaPlayer/plyr.scss');\r\n\r\nvar plyr: any = require('plyr');\r\n\r\nexport default class MediaPlayerWebPart extends BaseClientSideWebPart<IMediaPlayerWebPartProps> {\r\n\r\n  private guid: string;\r\n\r\n  /**\r\n   * @function\r\n   * Web part contructor.\r\n   */\r\n  public constructor(context?: IWebPartContext) {\r\n    super();\r\n\r\n    this.guid = this.getGuid();\r\n\r\n    //Hack: to invoke correctly the onPropertyChange function outside this class\r\n    //we need to bind this object on it first\r\n    this.onPropertyPaneFieldChanged = this.onPropertyPaneFieldChanged.bind(this);\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Gets WP data version\r\n   */\r\n  protected get dataVersion(): Version {\r\n    return Version.parse('1.0');\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Renders HTML code\r\n   */\r\n  public render(): void {\r\n\r\n    var html = '';\r\n    if (this.properties.player == 'youtube') {\r\n      html += '<div data-type=\"youtube\" data-video-id=\"' + this.properties.youtubeVideoId + '\"></div>';\r\n    }\r\n    else if (this.properties.player == 'vimeo') {\r\n      html += '<div data-type=\"vimeo\" data-video-id=\"' + this.properties.vimeoVideoId + '\"></div>';\r\n    }\r\n    else if (this.properties.player == 'audio') {\r\n      html += `\r\n        <audio controls>\r\n          <source src=\"${this.properties.audio}\" type=\"audio/mp3\">\r\n        </audio>\r\n      `;\r\n    }\r\n    else if (this.properties.player == 'video') {\r\n      var captions = '';\r\n      for (var i = 0; i < this.properties.html5captions.length; i++) {\r\n        var caption = this.properties.html5captions[i];\r\n        captions += '<track kind=\"captions\" label=\"' + caption['Title'] + '\" src=\"' + caption['Url'] + '\" srclang=\"' + caption['SrcLen'] + '\">';\r\n      }\r\n      html += `\r\n        <video poster=\"${this.properties.html5cover}\" controls>\r\n          <source src=\"${this.properties.html5video}\" type=\"video/mp4\">\r\n          ${captions}\r\n        </video>\r\n      `;\r\n    }\r\n    this.domElement.innerHTML = html;\r\n\r\n    plyr.setup();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Generates a GUID\r\n   */\r\n  private getGuid(): string {\r\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' +\r\n      this.s4() + '-' + this.s4() + this.s4() + this.s4();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Generates a GUID part\r\n   */\r\n  private s4(): string {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * PropertyPanel settings definition\r\n   */\r\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\r\n    return {\r\n      pages: [\r\n        {\r\n          header: {\r\n            description: strings.PropertyPaneDescription\r\n          },\r\n          displayGroupsAsAccordion: false,\r\n          groups: [\r\n            {\r\n              groupName: strings.BasicGroupName,\r\n              groupFields: [\r\n                PropertyPaneDropdown('player', {\r\n                  label: strings.player,\r\n                  options: [\r\n                    {key: 'youtube', text: 'Youtube'},\r\n                    {key: 'vimeo', text: 'Vimeo'},\r\n                    {key: 'video', text: 'HTML5 Video'},\r\n                    {key: 'audio', text: 'HTML5 Audio'},\r\n                  ]\r\n                }),\r\n                PropertyPaneTextField('youtubeVideoId', {\r\n                  label: strings.youtubeVideoId\r\n                }),\r\n                PropertyPaneTextField('vimeoVideoId', {\r\n                  label: strings.vimeoVideoId\r\n                }),\r\n                PropertyPaneTextField('audio', {\r\n                  label: strings.audio\r\n                }),\r\n                PropertyPaneTextField('html5video', {\r\n                  label: strings.html5video\r\n                }),\r\n                PropertyPaneTextField('html5cover', {\r\n                  label: strings.html5cover\r\n                }),\r\n                PropertyFieldCustomList('html5captions', {\r\n                  label: strings.html5captions,\r\n                  value: this.properties.html5captions,\r\n                  headerText: strings.html5captions,\r\n                  fields: [\r\n                    { id: 'Title', title: 'Title', required: true, type: CustomListFieldType.string },\r\n                    { id: 'SrcLen', title: 'SrcLen', required: false, hidden: false, type: CustomListFieldType.string },\r\n                    { id: 'Url', title: 'Url', required: true, hidden: false, type: CustomListFieldType.string }\r\n                  ],\r\n                  onPropertyChange: this.onPropertyPaneFieldChanged,\r\n                  render: this.render.bind(this),\r\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\r\n                  context: this.context,\r\n                  properties: this.properties,\r\n                  key: 'mediaPlayerListField'\r\n                })\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}