{"version":3,"sources":["webparts/tweetsFeed/TweetsFeedWebPart.ts"],"names":[],"mappings":"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","file":"webparts/tweetsFeed/TweetsFeedWebPart.js","sourcesContent":["/**\r\n * @file\r\n * Tweets Feed Web Part for SharePoint Framework SPFx\r\n *\r\n * Author: Olivier Carpentier\r\n * Copyright (c) 2016\r\n */\r\nimport {\r\n  BaseClientSideWebPart,\r\n  IPropertyPaneConfiguration,\r\n  PropertyPaneTextField,\r\n  PropertyPaneToggle,\r\n  PropertyPaneSlider,\r\n  IWebPartContext\r\n} from '@microsoft/sp-webpart-base';\r\nimport { Version } from '@microsoft/sp-core-library';\r\n\r\nimport * as strings from 'TweetsFeedStrings';\r\nimport { ITweetsFeedWebPartProps } from './ITweetsFeedWebPartProps';\r\n\r\n//Imports property pane custom fields\r\nimport { PropertyFieldColorPickerMini } from 'sp-client-custom-fields/lib/PropertyFieldColorPickerMini';\r\n\r\nvar twttr: any = require('twitter');\r\n\r\nexport default class TweetsFeedWebPart extends BaseClientSideWebPart<ITweetsFeedWebPartProps> {\r\n\r\n  /**\r\n   * @function\r\n   * Web part contructor.\r\n   */\r\n  public constructor(context?: IWebPartContext) {\r\n    super();\r\n\r\n    //Hack: to invoke correctly the onPropertyChange function outside this class\r\n    //we need to bind this object on it first\r\n    this.onPropertyPaneFieldChanged = this.onPropertyPaneFieldChanged.bind(this);\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Gets WP data version\r\n   */\r\n  protected get dataVersion(): Version {\r\n    return Version.parse('1.0');\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Renders HTML code\r\n   */\r\n  public render(): void {\r\n\r\n    if (this.properties.account == null || this.properties.account == '') {\r\n      var error = `\r\n        <div class=\"ms-MessageBar\">\r\n          <div class=\"ms-MessageBar-content\">\r\n            <div class=\"ms-MessageBar-icon\">\r\n              <i class=\"ms-Icon ms-Icon--Info\"></i>\r\n            </div>\r\n            <div class=\"ms-MessageBar-text\">\r\n              ${strings.ErrorSelectAccount}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `;\r\n      this.domElement.innerHTML = error;\r\n      return;\r\n    }\r\n\r\n    var dataChrome = '';\r\n    if (this.properties.footer === false)\r\n      dataChrome += \"nofooter \";\r\n    if (this.properties.header === false)\r\n      dataChrome += \"noheader \";\r\n    if (this.properties.borders === false)\r\n      dataChrome += \"noborders \";\r\n    if (this.properties.scrollbars === false)\r\n      dataChrome += \"noscrollbar \";\r\n    if (this.properties.transparent === true)\r\n      dataChrome += \"transparent \";\r\n\r\n    var limit = '';\r\n    if (this.properties.autoLimit === false)\r\n      limit = 'data-tweet-limit=\"' + this.properties.limit + '\"';\r\n\r\n    var html = '<a class=\"twitter-timeline\" data-link-color=\"' + this.properties.linkColor + '\" data-border-color=\"' + this.properties.borderColor + '\" height=\"' + this.properties.height + '\" width=\"' + this.properties.width + '\" ' + limit + ' data-chrome=\"' + dataChrome + '\" href=\"https://twitter.com/' + this.properties.account + '\">Tweets by ' + this.properties.account + '</a>';\r\n    this.domElement.innerHTML = html;\r\n\r\n    twttr.widgets.load();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * PropertyPanel settings definition\r\n   */\r\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\r\n    return {\r\n      pages: [\r\n        {\r\n          header: {\r\n            description: strings.PropertyPaneDescription\r\n          },\r\n          displayGroupsAsAccordion: true,\r\n          groups: [\r\n            {\r\n              groupName: strings.BasicGroupName,\r\n              groupFields: [\r\n                PropertyPaneTextField('account', {\r\n                  label: strings.Account\r\n                }),\r\n                PropertyPaneToggle('autoLimit', {\r\n                  label: strings.AutoLimit\r\n                }),\r\n                PropertyPaneSlider('limit', {\r\n                  label: strings.Limit,\r\n                  min: 1,\r\n                  max: 1000,\r\n                  step: 1\r\n                }),\r\n                PropertyPaneToggle('header', {\r\n                  label: strings.Header\r\n                }),\r\n                PropertyPaneToggle('footer', {\r\n                  label: strings.Footer\r\n                }),\r\n                PropertyPaneToggle('borders', {\r\n                  label: strings.Borders\r\n                }),\r\n                PropertyPaneToggle('scrollbars', {\r\n                  label: strings.Scrollbars\r\n                })\r\n              ]\r\n            },\r\n            {\r\n              groupName: strings.LayoutGroupName,\r\n              groupFields: [\r\n                PropertyPaneTextField('width', {\r\n                  label: strings.Width\r\n                }),\r\n                PropertyPaneTextField('height', {\r\n                  label: strings.Height\r\n                }),\r\n                PropertyPaneToggle('transparent', {\r\n                  label: strings.Transparent\r\n                }),\r\n                PropertyFieldColorPickerMini('linkColor', {\r\n                  label: strings.LinkColor,\r\n                  initialColor: this.properties.linkColor,\r\n                  onPropertyChange: this.onPropertyPaneFieldChanged,\r\n                  render: this.render.bind(this),\r\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\r\n                  properties: this.properties,\r\n                  key: 'tweetsFeedLinkColorField'\r\n                }),\r\n                PropertyFieldColorPickerMini('borderColor', {\r\n                  label: strings.BorderColor,\r\n                  initialColor: this.properties.borderColor,\r\n                  onPropertyChange: this.onPropertyPaneFieldChanged,\r\n                  render: this.render.bind(this),\r\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\r\n                  properties: this.properties,\r\n                  key: 'tweetsFeedBorderColorField'\r\n                })\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}