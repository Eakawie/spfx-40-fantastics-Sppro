{"version":3,"sources":["webparts/accordion/AccordionWebPart.ts"],"names":[],"mappings":"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","file":"webparts/accordion/AccordionWebPart.js","sourcesContent":["/**\r\n * @file\r\n * Accordion Web Part for SharePoint Framework SPFx\r\n *\r\n * Author: Olivier Carpentier\r\n * Copyright (c) 2016\r\n */\r\nimport {\r\n  BaseClientSideWebPart,\r\n  IPropertyPaneConfiguration,\r\n  IWebPartContext,\r\n  PropertyPaneDropdown,\r\n  PropertyPaneToggle,\r\n  PropertyPaneSlider\r\n} from '@microsoft/sp-webpart-base';\r\nimport { DisplayMode, Version } from '@microsoft/sp-core-library';\r\nimport { SPComponentLoader } from '@microsoft/sp-loader';\r\nimport { Environment, EnvironmentType } from '@microsoft/sp-core-library';\r\n\r\nimport * as strings from 'AccordionStrings';\r\nimport { IAccordionWebPartProps } from './IAccordionWebPartProps';\r\n\r\nimport { PropertyFieldCustomList, CustomListFieldType } from 'sp-client-custom-fields/lib/PropertyFieldCustomList';\r\n\r\n//Loads JQuery & JQuery UI\r\nrequire('jquery');\r\nrequire('jqueryui');\r\nimport * as $ from 'jquery';\r\nimport * as JQueryUI from 'jqueryui';\r\n\r\n/**\r\n * @class\r\n * Accordion Web part\r\n */\r\nexport default class AccordionWebPart extends BaseClientSideWebPart<IAccordionWebPartProps> {\r\n\r\n  private guid: string;\r\n\r\n  /**\r\n   * @function\r\n   * Web part contructor.\r\n   */\r\n  public constructor(context?: IWebPartContext) {\r\n    super();\r\n\r\n    //Initialize unique GUID\r\n    this.guid = this.getGuid();\r\n\r\n    //Hack: to invoke correctly the onPropertyChange function outside this class\r\n    //we need to bind this object on it first\r\n    this.onPropertyPaneFieldChanged = this.onPropertyPaneFieldChanged.bind(this);\r\n\r\n    if (Environment.type !== EnvironmentType.ClassicSharePoint) {\r\n      //Load the JQuery smoothness CSS file\r\n      SPComponentLoader.loadCss('//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Gets WP data version\r\n   */\r\n  protected get dataVersion(): Version {\r\n    return Version.parse('1.0');\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Renders HTML code\r\n   */\r\n  public render(): void {\r\n\r\n    if (Environment.type === EnvironmentType.ClassicSharePoint) {\r\n      var errorHtml = '';\r\n      errorHtml += '<div style=\"color: red;\">';\r\n      errorHtml += '<div style=\"display:inline-block; vertical-align: middle;\"><i class=\"ms-Icon ms-Icon--Error\" style=\"font-size: 20px\"></i></div>';\r\n      errorHtml += '<div style=\"display:inline-block; vertical-align: middle;margin-left:7px;\"><span>';\r\n      errorHtml += strings.ErrorClassicSharePoint;\r\n      errorHtml += '</span></div>';\r\n      errorHtml += '</div>';\r\n      this.domElement.innerHTML = errorHtml;\r\n      return;\r\n    }\r\n\r\n    var html = '';\r\n\r\n    //Define the main div\r\n    html += '<div class=\"accordion\" id=\"' + this.guid + '\">';\r\n\r\n    //Iterates on tabs\r\n    this.properties.tabs.map((tab: any, index: number) => {\r\n      if (this.displayMode == DisplayMode.Edit) {\r\n        //If diplay Mode is edit, include the textarea to edit the tab's content\r\n        html += '<h3>' + (tab.Title != null ? tab.Title : '') + '</h3>';\r\n        html += '<div style=\"min-height: 400px\"><textarea name=\"' + this.guid + '-editor-' + index + '\" id=\"' + this.guid + '-editor-' + index + '\">' + (tab.Content != null ? tab.Content : '') + '</textarea></div>';\r\n      }\r\n      else {\r\n        //Display Mode only, so display the tab content\r\n        html += '<h3>' + (tab.Title != null ? tab.Title : '') + '</h3>';\r\n        html += '<div>' + (tab.Content != null ? tab.Content : '') + '</div>';\r\n      }\r\n    });\r\n    html += '</div>';\r\n\r\n    //Flush the output HTML code\r\n    this.domElement.innerHTML = html;\r\n\r\n    //Inits JQuery UI accordion options\r\n    const accordionOptions: JQueryUI.AccordionOptions = {\r\n      animate: this.properties.animate != false ? this.properties.speed : false,\r\n      collapsible: this.properties.collapsible,\r\n      heightStyle: this.properties.heightStyle\r\n    };\r\n    //Call the JQuery UI accordion plugin on main div\r\n    $('#' + this.guid).accordion(accordionOptions);\r\n\r\n    if (this.displayMode == DisplayMode.Edit) {\r\n        //If the display mode is Edit, loads the CK Editor plugin\r\n        var ckEditorCdn = '//cdn.ckeditor.com/4.6.2/full/ckeditor.js';\r\n        //Loads the Javascript from the CKEditor CDN\r\n        SPComponentLoader.loadScript(ckEditorCdn, { globalExportsName: 'CKEDITOR' }).then((CKEDITOR: any): void => {\r\n          if (this.properties.inline == null || this.properties.inline === false) {\r\n            //If mode is not inline, loads the script with the replace method\r\n            for (var tab = 0; tab < this.properties.tabs.length; tab++) {\r\n              CKEDITOR.replace( this.guid + '-editor-' + tab, {\r\n                    skin: 'moono-lisa,//cdn.ckeditor.com/4.6.2/full-all/skins/moono-lisa/'\r\n              });\r\n            }\r\n\r\n          }\r\n          else {\r\n            //Mode is inline, so loads the script with the inline method\r\n            for (var tab2 = 0; tab2 < this.properties.tabs.length; tab2++) {\r\n              CKEDITOR.inline( this.guid + '-editor-' + tab2, {\r\n                    skin: 'moono-lisa,//cdn.ckeditor.com/4.6.2/full-all/skins/moono-lisa/'\r\n              });\r\n            }\r\n          }\r\n          //Catch the CKEditor instances change event to save the content\r\n          for (var i in CKEDITOR.instances) {\r\n            CKEDITOR.instances[i].on('change', (elm?, val?) =>\r\n            {\r\n              //Updates the textarea\r\n              elm.sender.updateElement();\r\n              //Gets the value\r\n              var value = ((document.getElementById(elm.sender.name)) as any).value;\r\n              var id = elm.sender.name.split(\"-editor-\")[1];\r\n              //Save the content in properties\r\n              this.properties.tabs[id].Content = value;\r\n            });\r\n          }\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Generates a GUID\r\n   */\r\n  private getGuid(): string {\r\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' +\r\n      this.s4() + '-' + this.s4() + this.s4() + this.s4();\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Generates a GUID part\r\n   */\r\n  private s4(): string {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * PropertyPanel settings definition\r\n   */\r\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\r\n    return {\r\n      pages: [\r\n        {\r\n          header: {\r\n            description: strings.PropertyPaneDescription\r\n          },\r\n          displayGroupsAsAccordion: true,\r\n          groups: [\r\n            {\r\n              groupName: strings.BasicGroupName,\r\n              groupFields: [\r\n                PropertyFieldCustomList('tabs', {\r\n                  label: strings.Accordion,\r\n                  value: this.properties.tabs,\r\n                  headerText: strings.ManageAccordion,\r\n                  fields: [\r\n                    { id: 'Title', title: 'Title', required: true, type: CustomListFieldType.string }\r\n                  ],\r\n                  onPropertyChange: this.onPropertyPaneFieldChanged,\r\n                  render: this.render.bind(this),\r\n                  disableReactivePropertyChanges: this.disableReactivePropertyChanges,\r\n                  properties: this.properties,\r\n                  context: this.context,\r\n                  key: \"accordionCustomListField\"\r\n                }),\r\n                PropertyPaneToggle('collapsible', {\r\n                  label: strings.Collapsible,\r\n                }),\r\n                PropertyPaneToggle('animate', {\r\n                  label: strings.Animate,\r\n                }),\r\n                PropertyPaneSlider('speed', {\r\n                  label: strings.Speed,\r\n                  min: 0,\r\n                  max: 4000,\r\n                  step: 50\r\n                }),\r\n                PropertyPaneDropdown('heightStyle', {\r\n                  label: strings.HeightStyle,\r\n                  options: [\r\n                    {key: 'auto', text: 'auto'},\r\n                    {key: 'fill', text: 'fill'},\r\n                    {key: 'content', text: 'content'}\r\n                  ]\r\n                })\r\n              ]\r\n            },\r\n            {\r\n              groupName: strings.TextEditorGroupName,\r\n              groupFields: [\r\n                PropertyPaneToggle('inline', {\r\n                  label: strings.Inline,\r\n                })\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}