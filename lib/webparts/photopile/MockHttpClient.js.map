{"version":3,"sources":["webparts/photopile/MockHttpClient.ts"],"names":[],"mappings":";;AASA;;;GAGG;AACH;IAAA;IAmCA,CAAC;IAnBG;;;OAGG;IACW,uBAAQ,GAAtB,UAAuB,OAAe,EAAE,OAAa;QACnD,MAAM,CAAC,IAAI,OAAO,CAAY,UAAC,OAAO;YAChC,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;OAGG;IACW,4BAAa,GAA3B,UAA4B,OAAe,EAAE,OAAa;QACxD,MAAM,CAAC,IAAI,OAAO,CAAgB,UAAC,OAAO;YACpC,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IACL,qBAAC;AAAD,CAnCA,AAmCC;AAjCG;;;GAGG;AACY,qBAAM,GAAc,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE,GAAG,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,CAAC;AAE1F;;;GAGG;AACY,qBAAM,GAAkB;IACrC,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,mBAAmB,EAAE,eAAe,EAAE,EAAE;CACtH,CAAC","file":"webparts/photopile/MockHttpClient.js","sourcesContent":["/**\r\n * @file\r\n * Implement a http client to request mock data to use the\r\n * web part with the local workbench\r\n *\r\n * Author: Olivier Carpentier\r\n */\r\nimport { ISPList, ISPListItem } from './ISPList';\r\n\r\n/**\r\n * @class\r\n * Defines a http client to request mock data to use the web part with the local workbench\r\n */\r\nexport default class MockHttpClient {\r\n\r\n    /**\r\n     * @var\r\n     * Mock SharePoint list sample\r\n     */\r\n    private static _lists: ISPList[] = [{ Title: 'Mock List', Id: '1', BaseTemplate: '109' }];\r\n\r\n    /**\r\n     * @var\r\n     * Mock SharePoint list item sample\r\n     */\r\n    private static _items: ISPListItem[] = [\r\n      { \"ID\": \"1\", \"Title\": \"Pic 1\", \"Description\": \"\", \"File\": { \"Name\": \"1.jpg\", \"ServerRelativeUrl\": \"/Images/1.jpg\" } }\r\n    ];\r\n\r\n    /**\r\n     * @function\r\n     * Mock get SharePoint list request\r\n     */\r\n    public static getLists(restUrl: string, options?: any): Promise<ISPList[]> {\r\n      return new Promise<ISPList[]>((resolve) => {\r\n            resolve(MockHttpClient._lists);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @function\r\n     * Mock get SharePoint list items request\r\n     */\r\n    public static getListsItems(restUrl: string, options?: any): Promise<ISPListItem[]> {\r\n      return new Promise<ISPListItem[]>((resolve) => {\r\n            resolve(MockHttpClient._items);\r\n        });\r\n    }\r\n}"],"sourceRoot":"..\\..\\..\\src"}